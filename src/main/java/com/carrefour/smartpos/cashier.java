/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.carrefour.smartpos;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** Cashier date */
@org.apache.avro.specific.AvroGenerated
public class cashier extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3634472647186277528L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"cashier\",\"namespace\":\"com.carrefour.smartpos\",\"doc\":\"Cashier date\",\"fields\":[{\"name\":\"store_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Werks code\"},{\"name\":\"update_date\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Format yyyymmdd\"},{\"name\":\"action\",\"type\":[\"null\",\"int\"],\"doc\":\"Action (insert:1/delete:0)\",\"default\":null},{\"name\":\"cashier_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Cashier code\"},{\"name\":\"cashier_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of cashier\"},{\"name\":\"cashier_surname1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"First surname of cashier\",\"default\":null},{\"name\":\"cashier_surname2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Second surname of cashier\",\"default\":null},{\"name\":\"cashier_document\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Identification document of cashier\",\"default\":null},{\"name\":\"cashier_phone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Phone of cashier\",\"default\":null},{\"name\":\"training\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Training authorization\",\"default\":null},{\"name\":\"pos_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Type of POS\"},{\"name\":\"cashcount\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Autoarqueo\",\"default\":null},{\"name\":\"inicash\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Initial amount allowed\",\"default\":null},{\"name\":\"inicash_amount\",\"type\":[\"null\",\"int\"],\"doc\":\"Cash of initial amount\",\"default\":0},{\"name\":\"level_authorization\",\"type\":[\"null\",\"int\"],\"doc\":\"Level authorization of cashier\",\"default\":null},{\"name\":\"badgecode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Badge code\",\"default\":null},{\"name\":\"pass_reset\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Password reset\",\"default\":null}],\"version\":\"1.1\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Werks code */
   private java.lang.String store_id;
  /** Format yyyymmdd */
   private java.lang.String update_date;
  /** Action (insert:1/delete:0) */
   private java.lang.Integer action;
  /** Cashier code */
   private java.lang.String cashier_id;
  /** Name of cashier */
   private java.lang.String cashier_name;
  /** First surname of cashier */
   private java.lang.String cashier_surname1;
  /** Second surname of cashier */
   private java.lang.String cashier_surname2;
  /** Identification document of cashier */
   private java.lang.String cashier_document;
  /** Phone of cashier */
   private java.lang.String cashier_phone;
  /** Training authorization */
   private java.lang.Boolean training;
  /** Type of POS */
   private java.lang.String pos_type;
  /** Autoarqueo */
   private java.lang.Boolean cashcount;
  /** Initial amount allowed */
   private java.lang.Boolean inicash;
  /** Cash of initial amount */
   private java.lang.Integer inicash_amount;
  /** Level authorization of cashier */
   private java.lang.Integer level_authorization;
  /** Badge code */
   private java.lang.String badgecode;
  /** Password reset */
   private java.lang.Boolean pass_reset;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public cashier() {}

  /**
   * All-args constructor.
   * @param store_id Werks code
   * @param update_date Format yyyymmdd
   * @param action Action (insert:1/delete:0)
   * @param cashier_id Cashier code
   * @param cashier_name Name of cashier
   * @param cashier_surname1 First surname of cashier
   * @param cashier_surname2 Second surname of cashier
   * @param cashier_document Identification document of cashier
   * @param cashier_phone Phone of cashier
   * @param training Training authorization
   * @param pos_type Type of POS
   * @param cashcount Autoarqueo
   * @param inicash Initial amount allowed
   * @param inicash_amount Cash of initial amount
   * @param level_authorization Level authorization of cashier
   * @param badgecode Badge code
   * @param pass_reset Password reset
   */
  public cashier(java.lang.String store_id, java.lang.String update_date, java.lang.Integer action, java.lang.String cashier_id, java.lang.String cashier_name, java.lang.String cashier_surname1, java.lang.String cashier_surname2, java.lang.String cashier_document, java.lang.String cashier_phone, java.lang.Boolean training, java.lang.String pos_type, java.lang.Boolean cashcount, java.lang.Boolean inicash, java.lang.Integer inicash_amount, java.lang.Integer level_authorization, java.lang.String badgecode, java.lang.Boolean pass_reset) {
    this.store_id = store_id;
    this.update_date = update_date;
    this.action = action;
    this.cashier_id = cashier_id;
    this.cashier_name = cashier_name;
    this.cashier_surname1 = cashier_surname1;
    this.cashier_surname2 = cashier_surname2;
    this.cashier_document = cashier_document;
    this.cashier_phone = cashier_phone;
    this.training = training;
    this.pos_type = pos_type;
    this.cashcount = cashcount;
    this.inicash = inicash;
    this.inicash_amount = inicash_amount;
    this.level_authorization = level_authorization;
    this.badgecode = badgecode;
    this.pass_reset = pass_reset;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return store_id;
    case 1: return update_date;
    case 2: return action;
    case 3: return cashier_id;
    case 4: return cashier_name;
    case 5: return cashier_surname1;
    case 6: return cashier_surname2;
    case 7: return cashier_document;
    case 8: return cashier_phone;
    case 9: return training;
    case 10: return pos_type;
    case 11: return cashcount;
    case 12: return inicash;
    case 13: return inicash_amount;
    case 14: return level_authorization;
    case 15: return badgecode;
    case 16: return pass_reset;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: store_id = (java.lang.String)value$; break;
    case 1: update_date = (java.lang.String)value$; break;
    case 2: action = (java.lang.Integer)value$; break;
    case 3: cashier_id = (java.lang.String)value$; break;
    case 4: cashier_name = (java.lang.String)value$; break;
    case 5: cashier_surname1 = (java.lang.String)value$; break;
    case 6: cashier_surname2 = (java.lang.String)value$; break;
    case 7: cashier_document = (java.lang.String)value$; break;
    case 8: cashier_phone = (java.lang.String)value$; break;
    case 9: training = (java.lang.Boolean)value$; break;
    case 10: pos_type = (java.lang.String)value$; break;
    case 11: cashcount = (java.lang.Boolean)value$; break;
    case 12: inicash = (java.lang.Boolean)value$; break;
    case 13: inicash_amount = (java.lang.Integer)value$; break;
    case 14: level_authorization = (java.lang.Integer)value$; break;
    case 15: badgecode = (java.lang.String)value$; break;
    case 16: pass_reset = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'store_id' field.
   * @return Werks code
   */
  public java.lang.String getStoreId() {
    return store_id;
  }

  /**
   * Sets the value of the 'store_id' field.
   * Werks code
   * @param value the value to set.
   */
  public void setStoreId(java.lang.String value) {
    this.store_id = value;
  }

  /**
   * Gets the value of the 'update_date' field.
   * @return Format yyyymmdd
   */
  public java.lang.String getUpdateDate() {
    return update_date;
  }

  /**
   * Sets the value of the 'update_date' field.
   * Format yyyymmdd
   * @param value the value to set.
   */
  public void setUpdateDate(java.lang.String value) {
    this.update_date = value;
  }

  /**
   * Gets the value of the 'action' field.
   * @return Action (insert:1/delete:0)
   */
  public java.lang.Integer getAction() {
    return action;
  }

  /**
   * Sets the value of the 'action' field.
   * Action (insert:1/delete:0)
   * @param value the value to set.
   */
  public void setAction(java.lang.Integer value) {
    this.action = value;
  }

  /**
   * Gets the value of the 'cashier_id' field.
   * @return Cashier code
   */
  public java.lang.String getCashierId() {
    return cashier_id;
  }

  /**
   * Sets the value of the 'cashier_id' field.
   * Cashier code
   * @param value the value to set.
   */
  public void setCashierId(java.lang.String value) {
    this.cashier_id = value;
  }

  /**
   * Gets the value of the 'cashier_name' field.
   * @return Name of cashier
   */
  public java.lang.String getCashierName() {
    return cashier_name;
  }

  /**
   * Sets the value of the 'cashier_name' field.
   * Name of cashier
   * @param value the value to set.
   */
  public void setCashierName(java.lang.String value) {
    this.cashier_name = value;
  }

  /**
   * Gets the value of the 'cashier_surname1' field.
   * @return First surname of cashier
   */
  public java.lang.String getCashierSurname1() {
    return cashier_surname1;
  }

  /**
   * Sets the value of the 'cashier_surname1' field.
   * First surname of cashier
   * @param value the value to set.
   */
  public void setCashierSurname1(java.lang.String value) {
    this.cashier_surname1 = value;
  }

  /**
   * Gets the value of the 'cashier_surname2' field.
   * @return Second surname of cashier
   */
  public java.lang.String getCashierSurname2() {
    return cashier_surname2;
  }

  /**
   * Sets the value of the 'cashier_surname2' field.
   * Second surname of cashier
   * @param value the value to set.
   */
  public void setCashierSurname2(java.lang.String value) {
    this.cashier_surname2 = value;
  }

  /**
   * Gets the value of the 'cashier_document' field.
   * @return Identification document of cashier
   */
  public java.lang.String getCashierDocument() {
    return cashier_document;
  }

  /**
   * Sets the value of the 'cashier_document' field.
   * Identification document of cashier
   * @param value the value to set.
   */
  public void setCashierDocument(java.lang.String value) {
    this.cashier_document = value;
  }

  /**
   * Gets the value of the 'cashier_phone' field.
   * @return Phone of cashier
   */
  public java.lang.String getCashierPhone() {
    return cashier_phone;
  }

  /**
   * Sets the value of the 'cashier_phone' field.
   * Phone of cashier
   * @param value the value to set.
   */
  public void setCashierPhone(java.lang.String value) {
    this.cashier_phone = value;
  }

  /**
   * Gets the value of the 'training' field.
   * @return Training authorization
   */
  public java.lang.Boolean getTraining() {
    return training;
  }

  /**
   * Sets the value of the 'training' field.
   * Training authorization
   * @param value the value to set.
   */
  public void setTraining(java.lang.Boolean value) {
    this.training = value;
  }

  /**
   * Gets the value of the 'pos_type' field.
   * @return Type of POS
   */
  public java.lang.String getPosType() {
    return pos_type;
  }

  /**
   * Sets the value of the 'pos_type' field.
   * Type of POS
   * @param value the value to set.
   */
  public void setPosType(java.lang.String value) {
    this.pos_type = value;
  }

  /**
   * Gets the value of the 'cashcount' field.
   * @return Autoarqueo
   */
  public java.lang.Boolean getCashcount() {
    return cashcount;
  }

  /**
   * Sets the value of the 'cashcount' field.
   * Autoarqueo
   * @param value the value to set.
   */
  public void setCashcount(java.lang.Boolean value) {
    this.cashcount = value;
  }

  /**
   * Gets the value of the 'inicash' field.
   * @return Initial amount allowed
   */
  public java.lang.Boolean getInicash() {
    return inicash;
  }

  /**
   * Sets the value of the 'inicash' field.
   * Initial amount allowed
   * @param value the value to set.
   */
  public void setInicash(java.lang.Boolean value) {
    this.inicash = value;
  }

  /**
   * Gets the value of the 'inicash_amount' field.
   * @return Cash of initial amount
   */
  public java.lang.Integer getInicashAmount() {
    return inicash_amount;
  }

  /**
   * Sets the value of the 'inicash_amount' field.
   * Cash of initial amount
   * @param value the value to set.
   */
  public void setInicashAmount(java.lang.Integer value) {
    this.inicash_amount = value;
  }

  /**
   * Gets the value of the 'level_authorization' field.
   * @return Level authorization of cashier
   */
  public java.lang.Integer getLevelAuthorization() {
    return level_authorization;
  }

  /**
   * Sets the value of the 'level_authorization' field.
   * Level authorization of cashier
   * @param value the value to set.
   */
  public void setLevelAuthorization(java.lang.Integer value) {
    this.level_authorization = value;
  }

  /**
   * Gets the value of the 'badgecode' field.
   * @return Badge code
   */
  public java.lang.String getBadgecode() {
    return badgecode;
  }

  /**
   * Sets the value of the 'badgecode' field.
   * Badge code
   * @param value the value to set.
   */
  public void setBadgecode(java.lang.String value) {
    this.badgecode = value;
  }

  /**
   * Gets the value of the 'pass_reset' field.
   * @return Password reset
   */
  public java.lang.Boolean getPassReset() {
    return pass_reset;
  }

  /**
   * Sets the value of the 'pass_reset' field.
   * Password reset
   * @param value the value to set.
   */
  public void setPassReset(java.lang.Boolean value) {
    this.pass_reset = value;
  }

  /**
   * Creates a new cashier RecordBuilder.
   * @return A new cashier RecordBuilder
   */
  public static com.carrefour.smartpos.cashier.Builder newBuilder() {
    return new com.carrefour.smartpos.cashier.Builder();
  }

  /**
   * Creates a new cashier RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new cashier RecordBuilder
   */
  public static com.carrefour.smartpos.cashier.Builder newBuilder(com.carrefour.smartpos.cashier.Builder other) {
    return new com.carrefour.smartpos.cashier.Builder(other);
  }

  /**
   * Creates a new cashier RecordBuilder by copying an existing cashier instance.
   * @param other The existing instance to copy.
   * @return A new cashier RecordBuilder
   */
  public static com.carrefour.smartpos.cashier.Builder newBuilder(com.carrefour.smartpos.cashier other) {
    return new com.carrefour.smartpos.cashier.Builder(other);
  }

  /**
   * RecordBuilder for cashier instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<cashier>
    implements org.apache.avro.data.RecordBuilder<cashier> {

    /** Werks code */
    private java.lang.String store_id;
    /** Format yyyymmdd */
    private java.lang.String update_date;
    /** Action (insert:1/delete:0) */
    private java.lang.Integer action;
    /** Cashier code */
    private java.lang.String cashier_id;
    /** Name of cashier */
    private java.lang.String cashier_name;
    /** First surname of cashier */
    private java.lang.String cashier_surname1;
    /** Second surname of cashier */
    private java.lang.String cashier_surname2;
    /** Identification document of cashier */
    private java.lang.String cashier_document;
    /** Phone of cashier */
    private java.lang.String cashier_phone;
    /** Training authorization */
    private java.lang.Boolean training;
    /** Type of POS */
    private java.lang.String pos_type;
    /** Autoarqueo */
    private java.lang.Boolean cashcount;
    /** Initial amount allowed */
    private java.lang.Boolean inicash;
    /** Cash of initial amount */
    private java.lang.Integer inicash_amount;
    /** Level authorization of cashier */
    private java.lang.Integer level_authorization;
    /** Badge code */
    private java.lang.String badgecode;
    /** Password reset */
    private java.lang.Boolean pass_reset;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.carrefour.smartpos.cashier.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.store_id)) {
        this.store_id = data().deepCopy(fields()[0].schema(), other.store_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.update_date)) {
        this.update_date = data().deepCopy(fields()[1].schema(), other.update_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.action)) {
        this.action = data().deepCopy(fields()[2].schema(), other.action);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cashier_id)) {
        this.cashier_id = data().deepCopy(fields()[3].schema(), other.cashier_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cashier_name)) {
        this.cashier_name = data().deepCopy(fields()[4].schema(), other.cashier_name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cashier_surname1)) {
        this.cashier_surname1 = data().deepCopy(fields()[5].schema(), other.cashier_surname1);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.cashier_surname2)) {
        this.cashier_surname2 = data().deepCopy(fields()[6].schema(), other.cashier_surname2);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.cashier_document)) {
        this.cashier_document = data().deepCopy(fields()[7].schema(), other.cashier_document);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.cashier_phone)) {
        this.cashier_phone = data().deepCopy(fields()[8].schema(), other.cashier_phone);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.training)) {
        this.training = data().deepCopy(fields()[9].schema(), other.training);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.pos_type)) {
        this.pos_type = data().deepCopy(fields()[10].schema(), other.pos_type);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.cashcount)) {
        this.cashcount = data().deepCopy(fields()[11].schema(), other.cashcount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.inicash)) {
        this.inicash = data().deepCopy(fields()[12].schema(), other.inicash);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.inicash_amount)) {
        this.inicash_amount = data().deepCopy(fields()[13].schema(), other.inicash_amount);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.level_authorization)) {
        this.level_authorization = data().deepCopy(fields()[14].schema(), other.level_authorization);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.badgecode)) {
        this.badgecode = data().deepCopy(fields()[15].schema(), other.badgecode);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.pass_reset)) {
        this.pass_reset = data().deepCopy(fields()[16].schema(), other.pass_reset);
        fieldSetFlags()[16] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing cashier instance
     * @param other The existing instance to copy.
     */
    private Builder(com.carrefour.smartpos.cashier other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.store_id)) {
        this.store_id = data().deepCopy(fields()[0].schema(), other.store_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.update_date)) {
        this.update_date = data().deepCopy(fields()[1].schema(), other.update_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.action)) {
        this.action = data().deepCopy(fields()[2].schema(), other.action);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cashier_id)) {
        this.cashier_id = data().deepCopy(fields()[3].schema(), other.cashier_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cashier_name)) {
        this.cashier_name = data().deepCopy(fields()[4].schema(), other.cashier_name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cashier_surname1)) {
        this.cashier_surname1 = data().deepCopy(fields()[5].schema(), other.cashier_surname1);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.cashier_surname2)) {
        this.cashier_surname2 = data().deepCopy(fields()[6].schema(), other.cashier_surname2);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.cashier_document)) {
        this.cashier_document = data().deepCopy(fields()[7].schema(), other.cashier_document);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.cashier_phone)) {
        this.cashier_phone = data().deepCopy(fields()[8].schema(), other.cashier_phone);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.training)) {
        this.training = data().deepCopy(fields()[9].schema(), other.training);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.pos_type)) {
        this.pos_type = data().deepCopy(fields()[10].schema(), other.pos_type);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.cashcount)) {
        this.cashcount = data().deepCopy(fields()[11].schema(), other.cashcount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.inicash)) {
        this.inicash = data().deepCopy(fields()[12].schema(), other.inicash);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.inicash_amount)) {
        this.inicash_amount = data().deepCopy(fields()[13].schema(), other.inicash_amount);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.level_authorization)) {
        this.level_authorization = data().deepCopy(fields()[14].schema(), other.level_authorization);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.badgecode)) {
        this.badgecode = data().deepCopy(fields()[15].schema(), other.badgecode);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.pass_reset)) {
        this.pass_reset = data().deepCopy(fields()[16].schema(), other.pass_reset);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'store_id' field.
      * Werks code
      * @return The value.
      */
    public java.lang.String getStoreId() {
      return store_id;
    }

    /**
      * Sets the value of the 'store_id' field.
      * Werks code
      * @param value The value of 'store_id'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setStoreId(java.lang.String value) {
      validate(fields()[0], value);
      this.store_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'store_id' field has been set.
      * Werks code
      * @return True if the 'store_id' field has been set, false otherwise.
      */
    public boolean hasStoreId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'store_id' field.
      * Werks code
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearStoreId() {
      store_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'update_date' field.
      * Format yyyymmdd
      * @return The value.
      */
    public java.lang.String getUpdateDate() {
      return update_date;
    }

    /**
      * Sets the value of the 'update_date' field.
      * Format yyyymmdd
      * @param value The value of 'update_date'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setUpdateDate(java.lang.String value) {
      validate(fields()[1], value);
      this.update_date = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'update_date' field has been set.
      * Format yyyymmdd
      * @return True if the 'update_date' field has been set, false otherwise.
      */
    public boolean hasUpdateDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'update_date' field.
      * Format yyyymmdd
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearUpdateDate() {
      update_date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'action' field.
      * Action (insert:1/delete:0)
      * @return The value.
      */
    public java.lang.Integer getAction() {
      return action;
    }

    /**
      * Sets the value of the 'action' field.
      * Action (insert:1/delete:0)
      * @param value The value of 'action'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setAction(java.lang.Integer value) {
      validate(fields()[2], value);
      this.action = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'action' field has been set.
      * Action (insert:1/delete:0)
      * @return True if the 'action' field has been set, false otherwise.
      */
    public boolean hasAction() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'action' field.
      * Action (insert:1/delete:0)
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearAction() {
      action = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'cashier_id' field.
      * Cashier code
      * @return The value.
      */
    public java.lang.String getCashierId() {
      return cashier_id;
    }

    /**
      * Sets the value of the 'cashier_id' field.
      * Cashier code
      * @param value The value of 'cashier_id'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setCashierId(java.lang.String value) {
      validate(fields()[3], value);
      this.cashier_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'cashier_id' field has been set.
      * Cashier code
      * @return True if the 'cashier_id' field has been set, false otherwise.
      */
    public boolean hasCashierId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'cashier_id' field.
      * Cashier code
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearCashierId() {
      cashier_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'cashier_name' field.
      * Name of cashier
      * @return The value.
      */
    public java.lang.String getCashierName() {
      return cashier_name;
    }

    /**
      * Sets the value of the 'cashier_name' field.
      * Name of cashier
      * @param value The value of 'cashier_name'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setCashierName(java.lang.String value) {
      validate(fields()[4], value);
      this.cashier_name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'cashier_name' field has been set.
      * Name of cashier
      * @return True if the 'cashier_name' field has been set, false otherwise.
      */
    public boolean hasCashierName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'cashier_name' field.
      * Name of cashier
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearCashierName() {
      cashier_name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'cashier_surname1' field.
      * First surname of cashier
      * @return The value.
      */
    public java.lang.String getCashierSurname1() {
      return cashier_surname1;
    }

    /**
      * Sets the value of the 'cashier_surname1' field.
      * First surname of cashier
      * @param value The value of 'cashier_surname1'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setCashierSurname1(java.lang.String value) {
      validate(fields()[5], value);
      this.cashier_surname1 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'cashier_surname1' field has been set.
      * First surname of cashier
      * @return True if the 'cashier_surname1' field has been set, false otherwise.
      */
    public boolean hasCashierSurname1() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'cashier_surname1' field.
      * First surname of cashier
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearCashierSurname1() {
      cashier_surname1 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'cashier_surname2' field.
      * Second surname of cashier
      * @return The value.
      */
    public java.lang.String getCashierSurname2() {
      return cashier_surname2;
    }

    /**
      * Sets the value of the 'cashier_surname2' field.
      * Second surname of cashier
      * @param value The value of 'cashier_surname2'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setCashierSurname2(java.lang.String value) {
      validate(fields()[6], value);
      this.cashier_surname2 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'cashier_surname2' field has been set.
      * Second surname of cashier
      * @return True if the 'cashier_surname2' field has been set, false otherwise.
      */
    public boolean hasCashierSurname2() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'cashier_surname2' field.
      * Second surname of cashier
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearCashierSurname2() {
      cashier_surname2 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'cashier_document' field.
      * Identification document of cashier
      * @return The value.
      */
    public java.lang.String getCashierDocument() {
      return cashier_document;
    }

    /**
      * Sets the value of the 'cashier_document' field.
      * Identification document of cashier
      * @param value The value of 'cashier_document'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setCashierDocument(java.lang.String value) {
      validate(fields()[7], value);
      this.cashier_document = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'cashier_document' field has been set.
      * Identification document of cashier
      * @return True if the 'cashier_document' field has been set, false otherwise.
      */
    public boolean hasCashierDocument() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'cashier_document' field.
      * Identification document of cashier
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearCashierDocument() {
      cashier_document = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'cashier_phone' field.
      * Phone of cashier
      * @return The value.
      */
    public java.lang.String getCashierPhone() {
      return cashier_phone;
    }

    /**
      * Sets the value of the 'cashier_phone' field.
      * Phone of cashier
      * @param value The value of 'cashier_phone'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setCashierPhone(java.lang.String value) {
      validate(fields()[8], value);
      this.cashier_phone = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'cashier_phone' field has been set.
      * Phone of cashier
      * @return True if the 'cashier_phone' field has been set, false otherwise.
      */
    public boolean hasCashierPhone() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'cashier_phone' field.
      * Phone of cashier
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearCashierPhone() {
      cashier_phone = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'training' field.
      * Training authorization
      * @return The value.
      */
    public java.lang.Boolean getTraining() {
      return training;
    }

    /**
      * Sets the value of the 'training' field.
      * Training authorization
      * @param value The value of 'training'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setTraining(java.lang.Boolean value) {
      validate(fields()[9], value);
      this.training = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'training' field has been set.
      * Training authorization
      * @return True if the 'training' field has been set, false otherwise.
      */
    public boolean hasTraining() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'training' field.
      * Training authorization
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearTraining() {
      training = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'pos_type' field.
      * Type of POS
      * @return The value.
      */
    public java.lang.String getPosType() {
      return pos_type;
    }

    /**
      * Sets the value of the 'pos_type' field.
      * Type of POS
      * @param value The value of 'pos_type'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setPosType(java.lang.String value) {
      validate(fields()[10], value);
      this.pos_type = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'pos_type' field has been set.
      * Type of POS
      * @return True if the 'pos_type' field has been set, false otherwise.
      */
    public boolean hasPosType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'pos_type' field.
      * Type of POS
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearPosType() {
      pos_type = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'cashcount' field.
      * Autoarqueo
      * @return The value.
      */
    public java.lang.Boolean getCashcount() {
      return cashcount;
    }

    /**
      * Sets the value of the 'cashcount' field.
      * Autoarqueo
      * @param value The value of 'cashcount'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setCashcount(java.lang.Boolean value) {
      validate(fields()[11], value);
      this.cashcount = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'cashcount' field has been set.
      * Autoarqueo
      * @return True if the 'cashcount' field has been set, false otherwise.
      */
    public boolean hasCashcount() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'cashcount' field.
      * Autoarqueo
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearCashcount() {
      cashcount = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'inicash' field.
      * Initial amount allowed
      * @return The value.
      */
    public java.lang.Boolean getInicash() {
      return inicash;
    }

    /**
      * Sets the value of the 'inicash' field.
      * Initial amount allowed
      * @param value The value of 'inicash'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setInicash(java.lang.Boolean value) {
      validate(fields()[12], value);
      this.inicash = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'inicash' field has been set.
      * Initial amount allowed
      * @return True if the 'inicash' field has been set, false otherwise.
      */
    public boolean hasInicash() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'inicash' field.
      * Initial amount allowed
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearInicash() {
      inicash = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'inicash_amount' field.
      * Cash of initial amount
      * @return The value.
      */
    public java.lang.Integer getInicashAmount() {
      return inicash_amount;
    }

    /**
      * Sets the value of the 'inicash_amount' field.
      * Cash of initial amount
      * @param value The value of 'inicash_amount'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setInicashAmount(java.lang.Integer value) {
      validate(fields()[13], value);
      this.inicash_amount = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'inicash_amount' field has been set.
      * Cash of initial amount
      * @return True if the 'inicash_amount' field has been set, false otherwise.
      */
    public boolean hasInicashAmount() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'inicash_amount' field.
      * Cash of initial amount
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearInicashAmount() {
      inicash_amount = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'level_authorization' field.
      * Level authorization of cashier
      * @return The value.
      */
    public java.lang.Integer getLevelAuthorization() {
      return level_authorization;
    }

    /**
      * Sets the value of the 'level_authorization' field.
      * Level authorization of cashier
      * @param value The value of 'level_authorization'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setLevelAuthorization(java.lang.Integer value) {
      validate(fields()[14], value);
      this.level_authorization = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'level_authorization' field has been set.
      * Level authorization of cashier
      * @return True if the 'level_authorization' field has been set, false otherwise.
      */
    public boolean hasLevelAuthorization() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'level_authorization' field.
      * Level authorization of cashier
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearLevelAuthorization() {
      level_authorization = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'badgecode' field.
      * Badge code
      * @return The value.
      */
    public java.lang.String getBadgecode() {
      return badgecode;
    }

    /**
      * Sets the value of the 'badgecode' field.
      * Badge code
      * @param value The value of 'badgecode'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setBadgecode(java.lang.String value) {
      validate(fields()[15], value);
      this.badgecode = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'badgecode' field has been set.
      * Badge code
      * @return True if the 'badgecode' field has been set, false otherwise.
      */
    public boolean hasBadgecode() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'badgecode' field.
      * Badge code
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearBadgecode() {
      badgecode = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'pass_reset' field.
      * Password reset
      * @return The value.
      */
    public java.lang.Boolean getPassReset() {
      return pass_reset;
    }

    /**
      * Sets the value of the 'pass_reset' field.
      * Password reset
      * @param value The value of 'pass_reset'.
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder setPassReset(java.lang.Boolean value) {
      validate(fields()[16], value);
      this.pass_reset = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'pass_reset' field has been set.
      * Password reset
      * @return True if the 'pass_reset' field has been set, false otherwise.
      */
    public boolean hasPassReset() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'pass_reset' field.
      * Password reset
      * @return This builder.
      */
    public com.carrefour.smartpos.cashier.Builder clearPassReset() {
      pass_reset = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    public cashier build() {
      try {
        cashier record = new cashier();
        record.store_id = fieldSetFlags()[0] ? this.store_id : (java.lang.String) defaultValue(fields()[0]);
        record.update_date = fieldSetFlags()[1] ? this.update_date : (java.lang.String) defaultValue(fields()[1]);
        record.action = fieldSetFlags()[2] ? this.action : (java.lang.Integer) defaultValue(fields()[2]);
        record.cashier_id = fieldSetFlags()[3] ? this.cashier_id : (java.lang.String) defaultValue(fields()[3]);
        record.cashier_name = fieldSetFlags()[4] ? this.cashier_name : (java.lang.String) defaultValue(fields()[4]);
        record.cashier_surname1 = fieldSetFlags()[5] ? this.cashier_surname1 : (java.lang.String) defaultValue(fields()[5]);
        record.cashier_surname2 = fieldSetFlags()[6] ? this.cashier_surname2 : (java.lang.String) defaultValue(fields()[6]);
        record.cashier_document = fieldSetFlags()[7] ? this.cashier_document : (java.lang.String) defaultValue(fields()[7]);
        record.cashier_phone = fieldSetFlags()[8] ? this.cashier_phone : (java.lang.String) defaultValue(fields()[8]);
        record.training = fieldSetFlags()[9] ? this.training : (java.lang.Boolean) defaultValue(fields()[9]);
        record.pos_type = fieldSetFlags()[10] ? this.pos_type : (java.lang.String) defaultValue(fields()[10]);
        record.cashcount = fieldSetFlags()[11] ? this.cashcount : (java.lang.Boolean) defaultValue(fields()[11]);
        record.inicash = fieldSetFlags()[12] ? this.inicash : (java.lang.Boolean) defaultValue(fields()[12]);
        record.inicash_amount = fieldSetFlags()[13] ? this.inicash_amount : (java.lang.Integer) defaultValue(fields()[13]);
        record.level_authorization = fieldSetFlags()[14] ? this.level_authorization : (java.lang.Integer) defaultValue(fields()[14]);
        record.badgecode = fieldSetFlags()[15] ? this.badgecode : (java.lang.String) defaultValue(fields()[15]);
        record.pass_reset = fieldSetFlags()[16] ? this.pass_reset : (java.lang.Boolean) defaultValue(fields()[16]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
